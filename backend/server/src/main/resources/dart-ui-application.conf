clustering {
    test.mode: true
    test.mode: ${?CLUSTERING_TEST_MODE}
    scheme: http
    scheme: ${?CLUSTERING_SCHEME}
    host: localhost
    host: ${?CLUSTERING_HOST}
    port: 80
    port: ${?CLUSTERING_PORT}
}

arangodb {
    database: dart
    database: ${?ARANGODB_DATABASE}
    host: localhost
    host: ${?ARANGODB_HOST}
    port: 8529
    port: ${?ARANGODB_PORT}
    connection.pool: 25
    connection.pool: ${?ARANGODB_CONNECTION_POOL}
}

postgres {
    driver.class: org.postgresql.Driver
    driver.class: ${?POSTGRES_DRIVER_CLASS}
    host: localhost
    host: ${?POSTGRES_HOST}
    port: 5432
    port: ${?POSTGRES_PORT}
    database: dart_db
    database: ${?POSTGRES_DB}
    user: dart
    user: ${?POSTGRES_USER}
    timeout.minutes: 1.0
    timeout.minutes: ${?POSTGRES_TIMEOUT}
    password: dart_pass
    password: ${?POSTGRES_PASSWORD}
    min.pool.size: ${?POSTGRES_MIN_POOL_SIZE}
    max.pool.size: ${?POSTGRES_MAX_POOL_SIZE}
    acquire.increment: ${?POSTGRES_ACQUIRE_INCREMENT}
    max.connections: ${?POSTGRES_MAX_CONNECTIONS}
}

updates.topic: dart.cdr.streaming.updates

kafka {
  application.id: ontology-repository
  group.id: ontology-repository

  key.serializer: "org.apache.kafka.common.serialization.StringSerializer"
  key.serializer: ${?KAFKA_KEY_SERIALIZER}
  key.deserializer: "org.apache.kafka.common.serialization.StringDeserializer"
  key.deserializer: ${?KAFKA_KEY_DESERIALIZER}
  value.serializer: "org.apache.kafka.common.serialization.StringSerializer"
  value.serializer: ${?KAFKA_VALUE_SERIALIZER}
  value.deserializer: "org.apache.kafka.common.serialization.StringDeserializer"
  value.deserializer: ${?KAFKA_VALUE_DESERIALIZER}

  bootstrap.servers: "kafka-broker-1:19092"
  bootstrap.servers: ${?KAFKA_BOOTSTRAP_SERVERS}

  fetch.message.max.bytes: 50000
  max.request.size: 5000000
  buffer.memory: 50000000
  batch.size: 300000
  linger.ms: 10
  fetch.message.max.bytes: 5000000
  max.partition.fetch.bytes: 5000000
}

backend {
    public.dir: "/opt/app/public"
    public.dir: ${?BACKEND_PUBLIC_DIR}
}

dart {
    base.path: "/concepts/explorer"
    base.path: ${?DART_BASE_PATH}
    auth {
        secret: ${?DART_AUTH_SECRET}
        bypass: false
        bypass: ${?DART_AUTH_BYPASS}
    }
}
